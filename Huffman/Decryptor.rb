aSCII = {
'µ'=> '0000000',
'œ'=> '0000001',
'´'=> '0000010',
'®'=> '0000011',
'¡'=> '0000100',
'™'=> '0000101',
'£'=> '0000110',
'¢'=> '0000111',
'∞'=> '0001000',
'§'=> '0001001',
'¶'=> '0001010',
'•'=> '0001011',
'¯'=> '0001100',
'ª'=> '0001101',
'º'=> '0001110',
'⁄'=> '0001111',
'€'=> '0010000',
'‹'=> '0010001',
'›'=> '0010010',
'ﬁ'=> '0010011',
'ﬂ'=> '0010100',
'‡'=> '0010101',
'°'=> '0010110',
'·'=> '0010111',
'‚'=> '0011000',
''=> '0011001',
'Â'=> '0011010',
'Ç'=> '0011011',
'Ô'=> '0011100',
'Ò'=> '0011101',
'Á'=> '0011110',
'Å'=> '0011111',
' '=> '0100000',
'!'=> '0100001',
'"'=> '0100010',
'#'=> '0100011',
'$'=> '0100100',
'%'=> '0100101',
'&'=> '0100110',
'\''=>'0100111',
'('=> '0101000',
')'=> '0101001',
'*'=> '0101010',
'+'=> '0101011',
','=> '0101100',
'-'=> '0101101',
'.'=> '0101110',
'/'=> '0101111',
'0'=> '0110000',
'1'=> '0110001',
'2'=> '0110010',
'3'=> '0110011',
'4'=> '0110100',
'5'=> '0110101',
'6'=> '0110110',
'7'=> '0110111',
'8'=> '0111000',
'9'=> '0111001',
':'=> '0111010',
';'=> '0111011',
'<'=> '0111100',
'='=> '0111101',
'>'=> '0111110',
'?'=> '0111111',
'@'=> '1000000',
'A'=> '1000001',
'B'=> '1000010',
'C'=> '1000011',
'D'=> '1000100',
'E'=> '1000101',
'F'=> '1000110',
'G'=> '1000111',
'H'=> '1001000',
'I'=> '1001001',
'J'=> '1001010',
'K'=> '1001011',
'L'=> '1001100',
'M'=> '1001101',
'N'=> '1001110',
'O'=> '1001111',
'P'=> '1010000',
'Q'=> '1010001',
'R'=> '1010010',
'S'=> '1010011',
'T'=> '1010100',
'U'=> '1010101',
'V'=> '1010110',
'W'=> '1010111',
'X'=> '1011000',
'Y'=> '1011001',
'Z'=> '1011010',
'['=> '1011011',
'\\'=>'1011100',
']'=> '1011101',
'^'=> '1011110',
'_'=> '1011111',
'`'=> '1100000',
'a'=> '1100001',
'b'=> '1100010',
'c'=> '1100011',
'd'=> '1100100',
'e'=> '1100101',
'f'=> '1100110',
'g'=> '1100111',
'h'=> '1101000',
'i'=> '1101001',
'j'=> '1101010',
'k'=> '1101011',
'l'=> '1101100',
'm'=> '1101101',
'n'=> '1101110',
'o'=> '1101111',
'p'=> '1110000',
'q'=> '1110001',
'r'=> '1110010',
's'=> '1110011',
't'=> '1110100',
'u'=> '1110101',
'v'=> '1110110',
'w'=> '1110111',
'x'=> '1111000',
'y'=> '1111001',
'z'=> '1111010',
'{'=> '1111011',
'|'=> '1111100',
'}'=> '1111101',
'~'=> '1111110',
'å'=> '1111111'
}
replacors = {
  'a'=>'0000',
  'b'=>'0001',
  'c'=>'0010',
  'd'=>'0011',
  'e'=>'0100',
  'f'=>'0101',
  'g'=>'0110',
  'h'=>'0111',
  'i'=>'1000',
  'j'=>'1001',
  'k'=>'1010',
  'l'=>'1011',
  'm'=>'1100',
  'n'=>'1101',
  'o'=>'1110',
  'p'=>'1111',
  'q'=> '000',
  'r'=> '001',
  's'=> '010',
  't'=> '011',
  'w'=> '100',
  'x'=> '101',
  'y'=> '110',
  'z'=> '111',
  'A'=> '00',
  'B'=> '01',
  'C'=> '10',
  'D'=> '11'
}
ht = {}


aSCII.each do |k,v|
  if not replacors.keys.include?(k) and k != ',' and k != '0' and k != '1'
    replacors = {k=>v}.merge(replacors)
  end
end


print 'Enter the text here: '
text = gets.chomp
class String
  def flatten
    return self
  end
end
text = text.split('∏')
numbers = ''
text[2].each_char do |char|
  numbers+=aSCII[char]
end
numbers+=text[3] if text[3] != nil
textOne = text[1].split(',')
x = 0
text[0].each_char do |char|
  replacors.each do |k,v|
    textOne[x].gsub!(k,v)
  end
  ht[textOne[x]] = char
  x += 1
end

###DECODING###

decoded = ''
for x in 0...(numbers.length)
  ht.each do |k,v|
    if numbers.start_with?(k)
      decoded+=v
      numbers=numbers[k.length...numbers.length]
    end
  end
end

puts decoded
